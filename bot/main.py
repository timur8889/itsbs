def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞"""
    if not Config.BOT_TOKEN or Config.BOT_TOKEN == "YOUR_BOT_TOKEN_HERE":
        logger.error("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
        return
    
    try:
        updater = Updater(Config.BOT_TOKEN)
        dispatcher = updater.dispatcher

        # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤...
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
        broadcast_conv_handler = ConversationHandler(
            entry_points=[
                MessageHandler(Filters.regex('^(üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞)$'), start_broadcast),
            ],
            states={
                BROADCAST_AUDIENCE: [MessageHandler(Filters.text & ~Filters.command, handle_broadcast_audience)],
                BROADCAST_MESSAGE: [
                    MessageHandler(Filters.text & ~Filters.command, handle_broadcast_message),
                    MessageHandler(Filters.photo, handle_broadcast_message),
                    MessageHandler(Filters.document, handle_broadcast_message)
                ],
                BROADCAST_CONFIRM: [MessageHandler(Filters.text & ~Filters.command, confirm_broadcast)],
            },
            fallbacks=[
                CommandHandler('cancel', cancel_broadcast),
                MessageHandler(Filters.regex('^(‚ùå –û—Ç–º–µ–Ω–∏—Ç—å|üîô –í –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å)$'), cancel_broadcast),
            ],
            allow_reentry=True
        )

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...
        
        # –ù–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–µ–π
        dispatcher.add_handler(MessageHandler(
            Filters.regex('^(üíª IT –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å|üîß –ú–µ—Ö–∞–Ω–∏–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å|‚ö° –≠–ª–µ–∫—Ç—Ä–∏–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å)$'), 
            handle_department_admin_panel
        ))
        
        dispatcher.add_handler(MessageHandler(
            Filters.regex('^(üÜï –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ IT|üîÑ –í —Ä–∞–±–æ—Ç–µ IT|‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ IT|üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ IT)$'), 
            handle_it_admin_requests
        ))
        
        dispatcher.add_handler(MessageHandler(
            Filters.regex('^(üÜï –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ –º–µ—Ö–∞–Ω–∏–∫–∏|üîÑ –í —Ä–∞–±–æ—Ç–µ –º–µ—Ö–∞–Ω–∏–∫–∏|‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∫–∏|üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ—Ö–∞–Ω–∏–∫–∏)$'), 
            handle_mechanics_admin_requests
        ))
        
        dispatcher.add_handler(MessageHandler(
            Filters.regex('^(üÜï –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ —ç–ª–µ–∫—Ç—Ä–∏–∫–∏|üîÑ –í —Ä–∞–±–æ—Ç–µ —ç–ª–µ–∫—Ç—Ä–∏–∫–∏|‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —ç–ª–µ–∫—Ç—Ä–∏–∫–∏|üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç–ª–µ–∫—Ç—Ä–∏–∫–∏)$'), 
            handle_electricity_admin_requests
        ))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
        dispatcher.add_handler(MessageHandler(
            Filters.regex('^(üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞|üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏|üè¢ –í—Å–µ –∑–∞—è–≤–∫–∏|üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)$'), 
            handle_super_admin_menu
        ))
        
        dispatcher.add_handler(broadcast_conv_handler)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logger.info("ü§ñ –ë–æ—Ç –∑–∞—è–≤–æ–∫ –∑–∞–ø—É—â–µ–Ω —Å —Å–∏—Å—Ç–µ–º–æ–π —Ä–∞–∑–¥–µ–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–µ–π!")
        logger.info(f"üëë –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {Config.SUPER_ADMIN_IDS}")
        logger.info(f"üë• –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –ø–æ –æ—Ç–¥–µ–ª–∞–º: {Config.ADMIN_CHAT_IDS}")
        
        updater.start_polling()
        updater.idle()

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")

def handle_super_admin_menu(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    text = update.message.text
    user_id = update.message.from_user.id
    
    if not Config.is_super_admin(user_id):
        return show_main_menu(update, context)
    
    if text == 'üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞':
        return start_broadcast(update, context)
    elif text == 'üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏':
        return show_admin_management(update, context)
    elif text == 'üè¢ –í—Å–µ –∑–∞—è–≤–∫–∏':
        return show_all_requests(update, context)
    elif text == 'üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        return show_complete_statistics(update, context)
    elif text == 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        return show_main_menu(update, context)

def show_admin_management(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏"""
    user_id = update.message.from_user.id
    
    if not Config.is_super_admin(user_id):
        update.message.reply_text("‚ùå –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–¥–º–∏–Ω–∞–º–∏.")
        return
    
    admin_list_text = "üë• *–°–ü–ò–°–û–ö –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í*\n\n"
    
    for department, admins in Config.ADMIN_CHAT_IDS.items():
        admin_list_text += f"üè¢ *{department}:*\n"
        for admin_id in admins:
            if admin_id in Config.SUPER_ADMIN_IDS:
                admin_list_text += f"  üëë –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω: {admin_id}\n"
            else:
                admin_list_text += f"  üë®‚Äçüíº –ê–¥–º–∏–Ω: {admin_id}\n"
        admin_list_text += "\n"
    
    update.message.reply_text(
        admin_list_text,
        reply_markup=ReplyKeyboardMarkup(admin_management_keyboard, resize_keyboard=True),
        parse_mode=ParseMode.MARKDOWN
    )

def show_all_requests(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∑–∞—è–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã"""
    user_id = update.message.from_user.id
    
    if not Config.is_super_admin(user_id):
        update.message.reply_text("‚ùå –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤—Å–µ –∑–∞—è–≤–∫–∏.")
        return
    
    all_requests = db.get_requests_by_filter('all', 100)
    
    if not all_requests:
        update.message.reply_text(
            "üì≠ –í —Å–∏—Å—Ç–µ–º–µ –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫.",
            reply_markup=ReplyKeyboardMarkup(super_admin_panel_keyboard, resize_keyboard=True)
        )
        return
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –æ—Ç–¥–µ–ª–∞–º
    departments = {}
    for req in all_requests:
        dept = req['department']
        if dept not in departments:
            departments[dept] = []
        departments[dept].append(req)
    
    for department, requests in departments.items():
        update.message.reply_text(
            f"üè¢ *{department} - {len(requests)} –∑–∞—è–≤–æ–∫:*",
            parse_mode=ParseMode.MARKDOWN
        )
        
        for req in requests:
            show_request_for_admin(update, context, req)
    
    update.message.reply_text(
        f"üìä *–í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(all_requests)}*",
        reply_markup=ReplyKeyboardMarkup(super_admin_panel_keyboard, resize_keyboard=True),
        parse_mode=ParseMode.MARKDOWN
    )

def show_complete_statistics(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã"""
    user_id = update.message.from_user.id
    
    if not Config.is_super_admin(user_id):
        update.message.reply_text("‚ùå –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.")
        return
    
    all_requests = db.get_requests_by_filter('all', 1000)
    
    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    department_stats = {}
    status_stats = {'new': 0, 'in_progress': 0, 'completed': 0}
    urgency_stats = {}
    system_type_stats = {}
    
    for req in all_requests:
        dept = req['department']
        status = req['status']
        urgency = req['urgency']
        system_type = req['system_type']
        
        department_stats[dept] = department_stats.get(dept, 0) + 1
        status_stats[status] = status_stats.get(status, 0) + 1
        urgency_stats[urgency] = urgency_stats.get(urgency, 0) + 1
        system_type_stats[system_type] = system_type_stats.get(system_type, 0) + 1
    
    stats_text = (
        "üìà *–ü–û–õ–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´*\n\n"
        f"üìä *–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"
        f"‚Ä¢ üÜï –ù–æ–≤—ã—Ö: {status_stats['new']}\n"
        f"‚Ä¢ üîÑ –í —Ä–∞–±–æ—Ç–µ: {status_stats['in_progress']}\n"
        f"‚Ä¢ ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö: {status_stats['completed']}\n"
        f"‚Ä¢ üìà –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {len(all_requests)}\n\n"
    )
    
    stats_text += "üè¢ *–ü–æ –æ—Ç–¥–µ–ª–∞–º:*\n"
    for dept, count in sorted(department_stats.items()):
        stats_text += f"‚Ä¢ {dept}: {count}\n"
    
    stats_text += "\n‚è∞ *–ü–æ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏:*\n"
    for urgency, count in sorted(urgency_stats.items()):
        stats_text += f"‚Ä¢ {urgency}: {count}\n"
    
    stats_text += "\nüîß *–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–∏–ø—ã –ø—Ä–æ–±–ª–µ–º:*\n"
    for system_type, count in sorted(system_type_stats.items(), key=lambda x: x[1], reverse=True)[:10]:
        stats_text += f"‚Ä¢ {system_type}: {count}\n"
    
    update.message.reply_text(
        stats_text,
        reply_markup=ReplyKeyboardMarkup(super_admin_panel_keyboard, resize_keyboard=True),
        parse_mode=ParseMode.MARKDOWN
    )
