import logging
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters
from config import BotConfig
from database.models import Database

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def main():
    config = BotConfig()
    
    if not config.token:
        raise ValueError("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = Database(config.db_url)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(config.token).build()
    
    # –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
    async def start(update, context):
        user = update.effective_user
        welcome_text = f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!\n\n–Ø - –±–æ—Ç IT-–æ—Ç–¥–µ–ª–∞ –∑–∞–≤–æ–¥–∞ '–ö–æ–Ω—Ç–∞–∫—Ç'."
        
        keyboard = [
            [{"text": "üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É", "callback_data": "create_request"}],
            [{"text": "üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏", "callback_data": "my_requests"}],
            [{"text": "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞", "callback_data": "help"}]
        ]
        
        if user.id in config.admin_ids:
            keyboard.append([{"text": "üë®‚Äçüíº –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", "callback_data": "admin_panel"}])
        
        reply_markup = {"inline_keyboard": keyboard}
        
        await update.message.reply_text(welcome_text, reply_markup=reply_markup)
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", start))
    
    # –ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏
    async def button_handler(update, context):
        query = update.callback_query
        await query.answer()
        
        if query.data == 'create_request':
            await query.edit_message_text(
                "üìÇ <b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–±–ª–µ–º—ã:</b>",
                parse_mode='HTML'
            )
        elif query.data == 'help':
            await query.edit_message_text(
                "‚ÑπÔ∏è <b>–°–ø—Ä–∞–≤–∫–∞:</b>\n\n–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É'",
                parse_mode='HTML'
            )
        else:
            await query.edit_message_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {query.data}")
    
    application.add_handler(CallbackQueryHandler(button_handler))
    
    print("ü§ñ –ë–æ—Ç IT-–æ—Ç–¥–µ–ª–∞ –∑–∞–≤–æ–¥–∞ '–ö–æ–Ω—Ç–∞–∫—Ç' –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == '__main__':
    main()
