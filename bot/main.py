import logging
import os
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def main():
    try:
        from config import BotConfig
        from database.models import Database
    except ImportError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ –∏ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤")
        return
    
    config = BotConfig()
    
    if not config.token:
        logger.error("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    print(f"ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ IT-–æ—Ç–¥–µ–ª–∞ –∑–∞–≤–æ–¥–∞ '–ö–æ–Ω—Ç–∞–∫—Ç'...")
    print(f"üîë –¢–æ–∫–µ–Ω: {config.token[:10]}...")
    print(f"üë®‚Äçüíº –ê–¥–º–∏–Ω—ã: {config.admin_ids}")
    print(f"üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {config.db_url}")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db = Database(config.db_url)
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        from telegram.ext import Application
        application = Application.builder().token(config.token).build()
        
        # –ü—Ä–æ—Å—Ç—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        async def start(update, context):
            from telegram import InlineKeyboardButton, InlineKeyboardMarkup
            
            user = update.effective_user
            welcome_text = f"""üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!

ü§ñ –Ø - –±–æ—Ç IT-–æ—Ç–¥–µ–ª–∞ –∑–∞–≤–æ–¥–∞ "–ö–æ–Ω—Ç–∞–∫—Ç". 
–Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É.

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"""
            
            keyboard = [
                [InlineKeyboardButton("üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É", callback_data="create_request")],
                [InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏", callback_data="my_requests")],
                [InlineKeyboardButton("‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞", callback_data="help")]
            ]
            
            if user.id in config.admin_ids:
                keyboard.append([InlineKeyboardButton("üë®‚Äçüíº –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")])
            
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            if update.message:
                await update.message.reply_text(welcome_text, reply_markup=reply_markup)
            else:
                await update.callback_query.edit_message_text(welcome_text, reply_markup=reply_markup)
        
        async def help_command(update, context):
            help_text = """üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞

–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ "üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É" –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.

–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞—è–≤–æ–∫:
üñ•Ô∏è –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ - –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–µ—Ö–Ω–∏–∫–æ–π
üíª –ü–û - –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã  
üåê –°–µ—Ç—å - –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ —Å–µ—Ç–µ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
üë§ –£—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏ - –¥–æ—Å—Ç—É–ø—ã –∏ –ø–∞—Ä–æ–ª–∏
‚ùì –î—Ä—É–≥–æ–µ - –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ

–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º: IT-–æ—Ç–¥–µ–ª, —Ç–µ–ª. 1234"""
            
            if update.message:
                await update.message.reply_text(help_text)
            else:
                await update.callback_query.edit_message_text(help_text)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
        async def button_handler(update, context):
            query = update.callback_query
            await query.answer()
            
            if query.data == 'create_request':
                # –ü—Ä–æ—Å—Ç–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –∑–∞—è–≤–æ–∫
                await query.edit_message_text(
                    "üìù –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /newrequest\n\n"
                    "–ò–ª–∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º —Å–æ–∑–¥–∞–Ω–∏–µ–º."
                )
            
            elif query.data == 'help':
                await help_command(update, context)
            
            elif query.data == 'my_requests':
                await query.edit_message_text("üìã –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–æ–∫ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏")
            
            elif query.data == 'admin_panel':
                if query.from_user.id in config.admin_ids:
                    await query.edit_message_text(
                        "üë®‚Äçüíº –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
                        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                        "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫\n"
                        "/list - —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫\n"
                        "–ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ..."
                    )
                else:
                    await query.answer("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
            
            else:
                await query.edit_message_text(f"–ö–æ–º–∞–Ω–¥–∞: {query.data}")
        
        # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏
        async def new_request(update, context):
            await update.message.reply_text(
                "üìù –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏\n\n"
                "–í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–æ—Ä–º–∞—Ç:\n"
                "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ/–ü–û/—Å–µ—Ç—å/—É—á–µ—Ç–∫–∞/–¥—Ä—É–≥–æ–µ\n"
                "–ü—Ä–æ–±–ª–µ–º–∞: –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n"
                "–ú–µ—Å—Ç–æ: –≤–∞—à –∫–∞–±–∏–Ω–µ—Ç/—Ü–µ—Ö\n"
                "–¢–µ–ª–µ—Ñ–æ–Ω: –≤–∞—à –Ω–æ–º–µ—Ä\n\n"
                "–ü—Ä–∏–º–µ—Ä:\n"
                "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ\n"
                "–ü—Ä–æ–±–ª–µ–º–∞: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –º—ã—à—å\n"
                "–ú–µ—Å—Ç–æ: —Ü–µ—Ö 5, –∫–∞–±. 203\n"
                "–¢–µ–ª–µ—Ñ–æ–Ω: 1234"
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        from telegram.ext import CommandHandler, CallbackQueryHandler
        
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("help", help_command))
        application.add_handler(CommandHandler("newrequest", new_request))
        application.add_handler(CallbackQueryHandler(button_handler))
        
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print("üîÑ –ó–∞–ø—É—Å–∫ –æ–ø—Ä–æ—Å–∞...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    main()
