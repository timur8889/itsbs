from telegram import Update, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler, CommandHandler
from database.models import Database
from keyboards.inline import get_main_menu, get_admin_keyboard
from config import BotConfig

class StartHandler:
    def __init__(self, db: Database):
        self.db = db
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user = update.effective_user
        welcome_text = f"""
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!

ü§ñ –Ø - –±–æ—Ç IT-–æ—Ç–¥–µ–ª–∞ –∑–∞–≤–æ–¥–∞ "–ö–æ–Ω—Ç–∞–∫—Ç". 
–Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É.

üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
‚Ä¢ üìù –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫ –≤ IT-–æ—Ç–¥–µ–ª
‚Ä¢ üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–æ–∫
‚Ä¢ üì± –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚Ä¢ ‚ö° –ë—ã—Å—Ç—Ä–∞—è —Ä–µ–∞–∫—Ü–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:
        """
        
        keyboard = get_main_menu()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—Å–∫—É—é –ø–∞–Ω–µ–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        if str(user.id) in BotConfig.admin_ids:
            keyboard = InlineKeyboardMarkup(
                keyboard.inline_keyboard + 
                [[InlineKeyboardButton("üë®‚Äçüíº –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data='admin_panel')]]
            )
        
        if update.message:
            await update.message.reply_text(welcome_text, reply_markup=keyboard, parse_mode='HTML')
        else:
            await update.callback_query.edit_message_text(welcome_text, reply_markup=keyboard, parse_mode='HTML')
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        help_text = """
üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>

<b>–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏:</b>
1. –ù–∞–∂–º–∏—Ç–µ "üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É"
2. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–±–ª–µ–º—ã
3. –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
4. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è

<b>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞—è–≤–æ–∫:</b>
üñ•Ô∏è <b>–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</b> - –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º–∏, –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º–∏, —Ç–µ–ª–µ—Ñ–æ–Ω–∞–º–∏
üíª <b>–ü–û</b> - —É—Å—Ç–∞–Ω–æ–≤–∫–∞, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –æ—à–∏–±–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º
üåê <b>–°–µ—Ç—å</b> - –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, Wi-Fi, —Å–µ—Ç–µ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã
üë§ <b>–£—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏</b> - –ø–∞—Ä–æ–ª–∏, –¥–æ—Å—Ç—É–ø—ã, –ø—Ä–∞–≤–∞
‚ùì <b>–î—Ä—É–≥–æ–µ</b> - –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã

<b>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:</b>
üü¢ <b>–ù–∏–∑–∫–∏–π</b> - –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞
üü° <b>–°—Ä–µ–¥–Ω–∏–π</b> - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞
üî¥ <b>–í—ã—Å–æ–∫–∏–π</b> - —Å—Ä–æ—á–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞
üí• <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π</b> - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–±–æ—Ç—ã

–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ IT-–æ—Ç–¥–µ–ª: 
üìû +7 (XXX) XXX-XX-XX
        """
        
        if update.message:
            await update.message.reply_text(help_text, parse_mode='HTML')
        else:
            await update.callback_query.edit_message_text(help_text, parse_mode='HTML')
        
        await self.start(update, context)
    
    def get_handlers(self):
        return [
            CommandHandler('start', self.start),
            CommandHandler('help', self.help_command),
            CallbackQueryHandler(self.start, pattern='^main_menu$')
        ]
