import logging
from telegram import (
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove,
    Update,
)
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    ConversationHandler,
    CallbackContext,
)

# –í–∫–ª—é—á–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
ADMIN_CHAT_IDS = ["5024165375", "ADMIN_CHAT_ID_2"]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ chat_id –∞–¥–º–∏–Ω–æ–≤
BOT_TOKEN = "7391146893:AAFDi7qQTWjscSeqNBueKlWXbaXK99NpnHw"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç—Ç–∞–ø—ã —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
NAME, PHONE, PLOT, PROBLEM, SYSTEM_TYPE = range(5)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
confirm_keyboard = [['‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å']]
system_type_keyboard = [
    ['üìπ –í–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ', 'üîê –°–ö–£–î'],
    ['üìû –¢–µ–ª–µ—Ñ–æ–Ω–∏—è', 'üåê –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Å–µ—Ç—å'],
    ['üéµ –ê—É–¥–∏–æ—Å–∏—Å—Ç–µ–º–∞', 'üö® –û—Ö—Ä–∞–Ω–Ω–∞—è —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è'],
    ['üè† –î–æ–º–æ—Ñ–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', '‚ùì –î—Ä—É–≥–æ–µ']
]

def send_admin_notification(context: CallbackContext, user_data: dict, chat_id: str = None) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"""
    user_info = f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{chat_id}" if chat_id else "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ù–µ —É–∫–∞–∑–∞–Ω"
    
    notification_text = (
        f"üö® *–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê*\n\n"
        f"{user_info}\n"
        f"üìõ –ò–º—è: {user_data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_data.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üìç –£—á–∞—Å—Ç–æ–∫: {user_data.get('plot', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üîß –¢–∏–ø —Å–∏—Å—Ç–µ–º—ã: {user_data.get('system_type', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {user_data.get('problem', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n\n"
        f"üïí –í—Ä–µ–º—è –∑–∞—è–≤–∫–∏: {user_data.get('timestamp', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}"
    )
    
    success_count = 0
    for admin_id in ADMIN_CHAT_IDS:
        try:
            context.bot.send_message(
                chat_id=admin_id,
                text=notification_text,
                parse_mode='Markdown'
            )
            success_count += 1
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")
    
    return success_count

def start(update: Update, context: CallbackContext) -> int:
    """–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è."""
    user = update.message.from_user
    context.user_data['user_id'] = user.id
    context.user_data['username'] = user.username
    
    update.message.reply_text(
        'üè† *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ—Ä–≤–∏—Å –∑–∞—è–≤–æ–∫ –¥–ª—è —Å–ª–∞–±–æ—Ç–æ—á–Ω—ã—Ö —Å–∏—Å—Ç–µ–º!*\n\n'
        '–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.\n'
        '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ.\n\n'
        '*–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?*',
        reply_markup=ReplyKeyboardRemove(),
        parse_mode='Markdown'
    )
    return NAME

def name(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω."""
    context.user_data['name'] = update.message.text
    update.message.reply_text(
        '*üìû –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω:*\n\n'
        '–ü—Ä–∏–º–µ—Ä: +7 999 123-45-67',
        reply_markup=ReplyKeyboardRemove(),
        parse_mode='Markdown'
    )
    return PHONE

def phone(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º —É—á–∞—Å—Ç–æ–∫."""
    context.user_data['phone'] = update.message.text
    update.message.reply_text(
        '*üìç –£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å —É—á–∞—Å—Ç–∫–∞:*\n\n'
        '–ü—Ä–∏–º–µ—Ä: –§—Ä–µ–∑–µ—Ä–Ω—ã–π —É—Å—Ç–∞—Å—Ç–æ–∫
        '–ò–ª–∏: –¢–æ–∫–∞—Ä–Ω—ã–π —É—á–∞—Å—Ç–æ–∫
        reply_markup=ReplyKeyboardRemove(),
        parse_mode='Markdown'
    )
    return PLOT

def plot(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º —É—á–∞—Å—Ç–æ–∫ –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–∏–ø —Å–∏—Å—Ç–µ–º—ã."""
    context.user_data['plot'] = update.message.text
    update.message.reply_text(
        '*üîß –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–ª–∞–±–æ—Ç–æ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã:*',
        reply_markup=ReplyKeyboardMarkup(
            system_type_keyboard, 
            one_time_keyboard=True, 
            resize_keyboard=True
        ),
        parse_mode='Markdown'
    )
    return SYSTEM_TYPE

def system_type(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø —Å–∏—Å—Ç–µ–º—ã –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã."""
    context.user_data['system_type'] = update.message.text
    update.message.reply_text(
        '*üìù –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–±–æ—Ç—ã:*\n\n'
        '–ü—Ä–∏–º–µ—Ä: –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –Ω–∞ –≤—Ö–æ–¥–µ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —Ä–µ–º–æ–Ω—Ç\n'
        '–ò–ª–∏: –ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ–º–æ—Ñ–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –Ω–∞ —É—á–∞—Å—Ç–∫–µ',
        reply_markup=ReplyKeyboardRemove(),
        parse_mode='Markdown'
    )
    return PROBLEM

def problem(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º summary."""
    from datetime import datetime
    
    context.user_data['problem'] = update.message.text
    context.user_data['timestamp'] = datetime.now().strftime("%d.%m.%Y %H:%M")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–≤–æ–¥–∫—É
    summary = (
        f"üìã *–°–≤–æ–¥–∫–∞ –∑–∞—è–≤–∫–∏:*\n\n"
        f"üìõ *–ò–º—è:* {context.user_data['name']}\n"
        f"üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* `{context.user_data['phone']}`\n"
        f"üìç *–£—á–∞—Å—Ç–æ–∫:* {context.user_data['plot']}\n"
        f"üîß *–¢–∏–ø —Å–∏—Å—Ç–µ–º—ã:* {context.user_data['system_type']}\n"
        f"üìù *–û–ø–∏—Å–∞–Ω–∏–µ:* {context.user_data['problem']}\n"
        f"üïí *–í—Ä–µ–º—è:* {context.user_data['timestamp']}"
    )
    
    context.user_data['summary'] = summary
    update.message.reply_text(
        f"{summary}\n\n"
        "*–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ:*",
        reply_markup=ReplyKeyboardMarkup(
            confirm_keyboard, 
            one_time_keyboard=True, 
            resize_keyboard=True
        ),
        parse_mode='Markdown'
    )
    return ConversationHandler.END

def confirm(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä."""
    if update.message.text == '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
        user = update.message.from_user
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        success_count = send_admin_notification(
            context, 
            context.user_data,
            user.username
        )
        
        if success_count > 0:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            update.message.reply_text(
                '‚úÖ *–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!*\n\n'
                'üìû –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n'
                '‚è±Ô∏è –û–±—ã—á–Ω–æ –º—ã –ø–µ—Ä–µ–∑–≤–∞–Ω–∏–≤–∞–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.\n\n'
                '_–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à —Å–µ—Ä–≤–∏—Å!_ üõ†Ô∏è',
                reply_markup=ReplyKeyboardRemove(),
                parse_mode='Markdown'
            )
            
            # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –∑–∞—è–≤–∫—É
            logger.info(f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {user.username}: {context.user_data['name']} - {context.user_data['phone']}")
        else:
            update.message.reply_text(
                '‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏.*\n\n'
                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.',
                reply_markup=ReplyKeyboardRemove(),
                parse_mode='Markdown'
            )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.user_data.clear()
    else:
        # –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ
        update.message.reply_text(
            '‚úèÔ∏è *–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ.*\n\n'
            '–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?',
            reply_markup=ReplyKeyboardRemove(),
            parse_mode='Markdown'
        )
        return NAME

def cancel(update: Update, context: CallbackContext) -> int:
    """–û—Ç–º–µ–Ω—è–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä."""
    update.message.reply_text(
        '‚ùå *–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.*\n\n'
        '–ï—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å! üë∑',
        reply_markup=ReplyKeyboardRemove(),
        parse_mode='Markdown'
    )
    context.user_data.clear()
    return ConversationHandler.END

def admin_stats(update: Update, context: CallbackContext) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
    user_id = update.message.from_user.id
    
    if str(user_id) not in ADMIN_CHAT_IDS:
        update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    stats_text = (
        "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞*\n\n"
        "üë• –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: 2\n"
        "üîÑ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ\n"
        "üìà –ó–∞ —Å–µ–≥–æ–¥–Ω—è –∑–∞—è–≤–æ–∫: 5\n"
        "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: 3\n"
        "‚è≥ –í —Ä–∞–±–æ—Ç–µ: 2"
    )
    
    update.message.reply_text(stats_text, parse_mode='Markdown')

def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞."""
    updater = Updater(BOT_TOKEN)
    dispatcher = updater.dispatcher

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            NAME: [MessageHandler(Filters.text & ~Filters.command, name)],
            PHONE: [MessageHandler(Filters.text & ~Filters.command, phone)],
            PLOT: [MessageHandler(Filters.text & ~Filters.command, plot)],
            SYSTEM_TYPE: [MessageHandler(Filters.text & ~Filters.command, system_type)],
            PROBLEM: [MessageHandler(Filters.text & ~Filters.command, problem)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    dispatcher.add_handler(conv_handler)
    dispatcher.add_handler(MessageHandler(Filters.regex('^(‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å|‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å)$'), confirm))
    dispatcher.add_handler(CommandHandler('stats', admin_stats))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
